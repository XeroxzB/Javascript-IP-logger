const request = require('request');

// Define your Discord webhook URL here
const webhookUrl = 'YOUR_DISCORD_WEBHOOK_URL';

// Function to get external IP address
function getExternalIP() {
  return new Promise((resolve, reject) => {
    request('https://api.ipify.org?format=json', (error, response, body) => {
      if (!error && response.statusCode === 200) {
        const data = JSON.parse(body);
        resolve(data.ip);
      } else {
        reject(error);
      }
    });
  });
}

// Function to get IP geolocation information
function getIPGeolocation(ipAddress) {
  return new Promise((resolve, reject) => {
    request(`https://ipinfo.io/${ipAddress}/json`, (error, response, body) => {
      if (!error && response.statusCode === 200) {
        const data = JSON.parse(body);
        resolve(data);
      } else {
        reject(error);
      }
    });
  });
}

// Function to send IP information to Discord webhook
function sendIPInfoToWebhook(ipInfo) {
  const message = `External IP Address: ${ipInfo.ip}\nLocation: ${ipInfo.city}, ${ipInfo.region}, ${ipInfo.country}`;
  const payload = {
    content: message,
  };

  request.post({
    url: webhookUrl,
    json: payload,
  }, (error, response, body) => {
    if (!error && response.statusCode === 204) {
      console.log('IP information sent to Discord webhook successfully.');
    } else {
      console.error('Failed to send IP information to Discord webhook:', error);
    }
  });
}

// Main function
async function main() {
  try {
    const ipAddress = await getExternalIP();
    const ipInfo = await getIPGeolocation(ipAddress);
    sendIPInfoToWebhook(ipInfo);
  } catch (error) {
    console.error('Error retrieving IP information:', error);
  }
}

main();
